name: Self-hosted CI

on:
  pull_request:
    branches: [main, master, develop]
    paths-ignore:
      - '**.md'
  workflow_dispatch:


jobs:

  ########################################################################################
  checkout:
    name: Checkout
    strategy:
      matrix:
        machine: [xeon, mac-i7, mac-m1]
    runs-on: [self-hosted, clusty, '${{ matrix.machine }}']
    
    steps:
    - uses: actions/checkout@v4
      with:
        submodules: recursive
    - name: Get tags
      run: | 
        cd ./libs/igraph
        #git fetch --prune --unshallow --tags
        echo exit code $?
        git tag --list
    

  ########################################################################################
  make:
    name: Make
    needs: checkout
    strategy:
      fail-fast: false
      matrix:
        machine: [xeon, mac-i7, mac-m1]
        compiler: [g++-11]
      
    runs-on: [self-hosted, clusty, '${{ matrix.machine }}']

    steps:
    - name: make
      run: | 
        make -j32 CXX=${{matrix.compiler}} 
        cp ./clusty ./clusty-${{matrix.compiler}}
        make clean

  ########################################################################################
  make-leiden:
    name: make (Leiden)
   
    needs: checkout
    strategy:
      fail-fast: false
      matrix:
        machine: [xeon]
        compiler: [g++-11]
      
    runs-on: [self-hosted, clusty, '${{ matrix.machine }}']

    steps:
    - name: make
      run: | 
        make -j32 CXX=${{matrix.compiler}} LEIDEN=true
        cp ./clusty ./clusty-leiden-${{matrix.compiler}}
        make clean
  
  ########################################################################################                 
  toy:
    name: Toy example
    needs: make
    strategy:
      fail-fast: false
      matrix:
        machine: [xeon, mac-i7, mac-m1]
        compiler: [g++-11]
        algo: [single]

    runs-on: [self-hosted, clusty, '${{ matrix.machine }}']    
    
    steps:
    - name: ${{matrix.algo}} (no representatives, numeric ids, singletons in object file)
      run: |
        ./clusty-${{matrix.compiler}} --objects-file ./test/toy.ids.tsv --algo ${{matrix.algo}} --id-cols idx1 idx2 --distance-col tani --similarity --numeric-ids --min tani 0.95 ./test/toy.ani.tsv toy.${{matrix.algo}}.tsv
        python3 ./test/cmp.py toy.${{matrix.algo}}.tsv ./test/toy.${{matrix.algo}}.tsv
        
  ########################################################################################        
         
  vir61-linkage:
    name: Vir61
    needs: make
    strategy:
      fail-fast: false
      matrix:
        machine: [xeon, mac-i7, mac-m1]
        compiler: [g++-11]
        algo: [single, complete]
        threshold: [95, 70]
     
    runs-on: [self-hosted, clusty, '${{ matrix.machine }}']    
    
    steps:
    - name: ${{matrix.algo}}, ${{matrix.threshold}} (with representatives, reordered columns)
      run: |
        ./clusty-${{matrix.compiler}} --algo ${{matrix.algo}} --objects-file ./test/vir61.list --similarity --min ani 0.${{matrix.threshold}} --id-cols id2 id1 --distance-col ani ./test/vir61.ani vir61.${{matrix.algo}}.${{matrix.threshold}} --out-representatives
        python3 ./test/cmp.py vir61.${{matrix.algo}}.${{matrix.threshold}} ./test/vir61.${{matrix.algo}}.${{matrix.threshold}}.python.csv
  
  ########################################################################################   
  ictv-linkage:
    name: ICTV (single and complete versus python clusterings)
    needs: make
    strategy:
      fail-fast: false
      matrix:
        machine: [xeon, mac-i7, mac-m1]
        compiler: [g++-11]
        algo: [single, complete]
        threshold: [95, 70]
     
    runs-on: [self-hosted, clusty, '${{ matrix.machine }}']    
    
    steps:
    - name: ${{matrix.algo}}, ${{matrix.threshold}} (no representatives)
      run: |
        ./clusty-${{matrix.compiler}} --algo ${{matrix.algo}} --objects-file ./test/ictv.list --similarity --min ani 0.${{matrix.threshold}} ./test/ictv.ani ictv.${{matrix.algo}}.${{matrix.threshold}}
        python3 ./test/cmp.py ictv.${{matrix.algo}}.${{matrix.threshold}} ./test/ictv.${{matrix.algo}}.${{matrix.threshold}}.python.csv
        
    - name: ${{matrix.algo}}, ${{matrix.threshold}} (with representatives)
      run: |
        ./clusty-${{matrix.compiler}} --algo ${{matrix.algo}} --objects-file ./test/ictv.list --similarity --min ani 0.${{matrix.threshold}} ./test/ictv.ani ictv.${{matrix.algo}}.${{matrix.threshold}}.reps --out-representatives
        python3 ./test/cmp.py ictv.${{matrix.algo}}.${{matrix.threshold}}.reps ./test/ictv.${{matrix.algo}}.${{matrix.threshold}}.python.csv
        
    - name: ${{matrix.algo}}, ${{matrix.threshold}} (no representatives, numeric ids)
      run: |
        ./clusty-${{matrix.compiler}} --algo ${{matrix.algo}} --objects-file ./test/ictv.list --similarity --min ani 0.${{matrix.threshold}} ./test/ictv.num ictv.${{matrix.algo}}.${{matrix.threshold}}.num --numeric-ids
        python3 ./test/cmp.py ictv.${{matrix.algo}}.${{matrix.threshold}}.num ./test/ictv.${{matrix.algo}}.${{matrix.threshold}}.python.csv
        
    - name: ${{matrix.algo}}, ${{matrix.threshold}} (with representatives, numeric ids)
      run: |
        ./clusty-${{matrix.compiler}} --algo ${{matrix.algo}} --objects-file ./test/ictv.list --similarity --min ani 0.${{matrix.threshold}} ./test/ictv.num ictv.${{matrix.algo}}.${{matrix.threshold}}.reps.num --out-representatives --numeric-ids
        python3 ./test/cmp.py ictv.${{matrix.algo}}.${{matrix.threshold}}.reps.num ./test/ictv.${{matrix.algo}}.${{matrix.threshold}}.python.csv
  
  ########################################################################################   
  ictv-all:
    name: ICTV (all algos versus our clusterings)
    needs: make
    strategy:
      fail-fast: false
      matrix:
        machine: [xeon, mac-i7, mac-m1]
        compiler: [g++-11]
        algo: [single, complete, uclust, set-cover, cd-hit]
        threshold: [70]
     
    runs-on: [self-hosted, clusty, '${{ matrix.machine }}']    
    
    steps:
    - name: ${{matrix.algo}}, ${{matrix.threshold}} (no representatives)
      run: |
        ./clusty-${{matrix.compiler}} --algo ${{matrix.algo}} --objects-file ./test/ictv.list --similarity --min ani 0.${{matrix.threshold}} ./test/ictv.ani ictv.${{matrix.algo}}.${{matrix.threshold}}
        cmp ictv.${{matrix.algo}}.${{matrix.threshold}} ./test/ictv.${{matrix.algo}}.${{matrix.threshold}}.csv
        
    - name: ${{matrix.algo}}, ${{matrix.threshold}} (with representatives)
      run: |
        ./clusty-${{matrix.compiler}} --algo ${{matrix.algo}} --objects-file ./test/ictv.list --similarity --min ani 0.${{matrix.threshold}} ./test/ictv.ani ictv.${{matrix.algo}}.${{matrix.threshold}}.reps --out-representatives
        cmp ictv.${{matrix.algo}}.${{matrix.threshold}}.reps ./test/ictv.${{matrix.algo}}.${{matrix.threshold}}.reps.csv
        
    - name: ${{matrix.algo}}, ${{matrix.threshold}} (with representatives, numeric ids)
      run: |
        ./clusty-${{matrix.compiler}} --algo ${{matrix.algo}} --objects-file ./test/ictv.list --similarity --min ani 0.${{matrix.threshold}} ./test/ictv.num ictv.${{matrix.algo}}.${{matrix.threshold}}.reps.num --out-representatives --numeric-ids
        cmp ictv.${{matrix.algo}}.${{matrix.threshold}}.reps.num ./test/ictv.${{matrix.algo}}.${{matrix.threshold}}.reps.csv
        
  ########################################################################################   
  ictv-leiden:
    name: ICTV (leiden)
    needs: make-leiden
    strategy:
      fail-fast: false
      matrix:
        machine: [xeon]
        compiler: [g++-11]
        algo: [leiden]
        threshold: [70]
     
    runs-on: [self-hosted, clusty, '${{ matrix.machine }}']    
    
    steps:
    - name: ${{matrix.algo}}, ${{matrix.threshold}} (no representatives)
      run: |
        ./clusty-leiden-${{matrix.compiler}} --algo ${{matrix.algo}} --objects-file ./test/ictv.list --similarity --min ani 0.${{matrix.threshold}} ./test/ictv.ani ictv.${{matrix.algo}}.${{matrix.threshold}}
        cmp ictv.${{matrix.algo}}.${{matrix.threshold}} ./test/ictv.${{matrix.algo}}.${{matrix.threshold}}.csv
        
    - name: ${{matrix.algo}}, ${{matrix.threshold}} (with representatives)
      run: |
        ./clusty-leiden-${{matrix.compiler}} --algo ${{matrix.algo}} --objects-file ./test/ictv.list --similarity --min ani 0.${{matrix.threshold}} ./test/ictv.ani ictv.${{matrix.algo}}.${{matrix.threshold}}.reps --out-representatives
        cmp ictv.${{matrix.algo}}.${{matrix.threshold}}.reps ./test/ictv.${{matrix.algo}}.${{matrix.threshold}}.reps.csv
        
    - name: ${{matrix.algo}}, ${{matrix.threshold}} (with representatives, numeric ids)
      run: |
        ./clusty-leiden-${{matrix.compiler}} --algo ${{matrix.algo}} --objects-file ./test/ictv.list --similarity --min ani 0.${{matrix.threshold}} ./test/ictv.num ictv.${{matrix.algo}}.${{matrix.threshold}}.reps.num --out-representatives --numeric-ids
        cmp ictv.${{matrix.algo}}.${{matrix.threshold}}.reps.num ./test/ictv.${{matrix.algo}}.${{matrix.threshold}}.reps.csv
  
